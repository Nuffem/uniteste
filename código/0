lista # https://cdn.jsdelivr.net/gh/angelonuffer/lista@f8c5dc040d06f0659f1d6b057a77631b7aed1ac2/c贸digo/lista.0
processo # https://cdn.jsdelivr.net/gh/angelonuffer/processo@28301145e902c160e4e8037953ab6b0483270c94/c贸digo/0

compara_listas = { lista_1 lista_2 } =>
  | lista_1[.] != lista_2[.] = 0
  | lista_1[.] == 0 = 1
  | lista_1[0] != lista_2[0] = 0
  | (
    _lista_1 = lista_1
    _lista_2 = lista_2
    compara_listas({
      lista_1: _lista_1[1:]
      lista_2: _lista_2[1:]
    })
  )

exibir = resultado => processo.nodejs({
  comandos: [
    ...lista.mapear({
      resultado.mensagens
      mensagem => processo.escreva({
        texto: mensagem
      })
    })
    processo.escreva({
      texto: resultado.passaram + "/" + resultado.mensagens[.] + " testes passaram."
    })
    resultado.passaram == resultado.mensagens[.] ?
      processo.saia({
        c贸digo: 0
      })
    :
      processo.saia({
        c贸digo: 1
      })
  ]
})

{
  uniteste: {
    descrever: args => destino => {
      nome: args[0]
      resultados: args[1]
      resultado: {
        passaram: lista.reduzir({
          lista.mapear({
            resultados
            resultado => (resultado("descrever")).passaram
          })
          args => args[0] + args[1]
        })
        mensagens: lista.planificar(lista.mapear({
          resultados
          resultado => lista.mapear({
            (resultado("descrever")).mensagens
            mensagem => {
              nome
              " | "
              mensagem
            } * ""
          })
        }))
      }
      destino == "descrever" ? resultado : exibir(resultado)
    }[0]
    iguais: args => destino => {
      resultado: {
        passaram: args[0] == args[1] ? 1 : 0
        mensagens: {
          passaram == 1 ? "ok" : {
            "Esperava que "
            "" + args[0]
            " fosse igual a "
            "" + args[1]
            "."
          } * ""
        }
      }
      destino == "descrever" ? resultado : exibir(resultado)
    }[0]
    listas_iguais: args => destino => {
      resultado: {
        passaram: compara_listas({
          lista_1: args[0]
          lista_2: args[1]
        }) ? 1 : 0
        mensagens: {
          passaram == 1 ? "ok" : {
            "Esperava que {"
            lista.juntar({args[0] ", "})
            "} fosse igual a {"
            lista.juntar({args[1] ", "})
            "}."
          } * ""
        }
      }
      destino == "descrever" ? resultado : exibir(resultado)
    }[0]
  }
}.uniteste