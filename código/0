lista = https://cdn.jsdelivr.net/gh/angelonuffer/lista@32aa798d17afce6fac77e4b77758c9f94e7cbb9e/código/0
processo = https://cdn.jsdelivr.net/gh/angelonuffer/processo@be3f9ea44ab58100e462ef0b70b1042df96365bf/código/0

compara_listas = { lista_1 lista_2 } =>
  | lista_1[.] != lista_2[.] = 0
  | lista_1[.] == 0 = 1
  | lista_1[0] != lista_2[0] = 0
  | compara_listas({
    lista_1: lista_1[1:]
    lista_2: lista_2[1:]
  })

exibir = { passaram mensagens } => processo.nodejs({
  comandos: [
    ...lista.mapear({
      lista: mensagens
      função: mensagem => processo.escreva(mensagem)
    })
    processo.escreva(passaram + "/" + mensagens[.] + " testes passaram.")
    passaram == mensagens[.] ?
      processo.saia(0)
    :
      processo.saia(1)
  ]
})

{
  descrever: { nome testes } => destino => (
    resultado = {
      passaram: lista.reduzir({
        lista: lista.mapear({
          lista: testes
          função: resultado => (resultado("descrever")).passaram
        })
        função: args => args[0] + args[1]
      })
      mensagens: lista.planificar(lista.mapear({
        lista: testes
        função: resultado => lista.mapear({
          lista: (resultado("descrever")).mensagens
          função: mensagem => [
            nome
            " | "
            mensagem
          ] * ""
        })
      }))
    }
    destino == "descrever" ? resultado : exibir(resultado)
  )
  iguais: args => destino => (
    passaram = args[0] == args[1] ? 1 : 0
    resultado = {
      passaram
      mensagens: [
        passaram == 1 ? "ok" : [
          "Esperava que "
          "" + args[0]
          " fosse igual a "
          "" + args[1]
          "."
        ] * ""
      ]
    }
    destino == "descrever" ? resultado : exibir(resultado)
  )
  listas_iguais: args => destino => (
    passaram = compara_listas({
      lista_1: args[0]
      lista_2: args[1]
    }) ? 1 : 0
    resultado = {
      passaram
      mensagens: [
        passaram == 1 ? "ok" : [
          "Esperava que ["
          args[0] * ", "
          "] fosse igual a ["
          args[1] * ", "
          "]."
        ] * ""
      ]
    }
    destino == "descrever" ? resultado : exibir(resultado)
  )
}