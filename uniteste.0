mapear = lista mapeador =>
  lista[.] == 0 ? [] :
  lista[.] == 1 ? [mapeador(lista[0])] :
  [mapeador(lista[0]) ...mapear(lista[1:] mapeador)]

juntar = lista delimitador =>
  lista[.] == 0 ? "" :
  lista[.] == 1 ? lista[0] :
  `${lista[0]}${delimitador}${juntar(lista[1:] delimitador)}`

uniteste = {
  principal: testes => (
    principal2 = testes2 =>
      testes2[.] == 0 ? [0 "" 0] :
      testes2[.] == 1 ? [testes2[0][0] juntar(testes2[0][1] 10) testes2[0][1][.]] :
      (
        resultado1 = principal2([testes2[0]])
        resultado2 = principal2(testes2[1:])
        [
          resultado1[0] + resultado2[0]
          juntar([
            resultado1[1]
            resultado2[1]
          ] 10)
          resultado1[2] + resultado2[2]
        ]
      )
    resultado = principal2(testes)
    [resultado[0] juntar([
      resultado[1]
      `Total de testes: ${"" + resultado[2]}`
      `Falharam: ${"" + resultado[0]}`
    ] 10)]
  )
  descrever: título testes =>
    testes[.] == 0 ? [0 []] :
    testes[.] == 1 ? [testes[0][0] mapear(testes[0][1] mensagem => `${título} | ${mensagem}`)] :
    testes[.] == 2 ? uniteste.descrever(título [
      [
        testes[0][0] + testes[1][0]
        [
          ...testes[0][1]
          ...testes[1][1]
        ]
      ]
    ]) :
    (
      resultado1 = uniteste.descrever(título testes[0:2])
      resultado2 = uniteste.descrever(título testes[2:])
      [
        resultado1[0] + resultado2[0]
        [
          ...resultado1[1]
          ...resultado2[1]
        ]
      ]
    )
  iguais: valor1 valor2 => valor1 == valor2 ? [0 ["ok"]] : [1 [`Esperava que ${"" + valor1} fosse igual a ${"" + valor2}.`]]
  listas_iguais: lista1 lista2 =>
    lista1[.] != lista2[.] ? [1 ["Esperava listas iguais."]] :
    lista1[0] != lista2[0] ? [1 ["Esperava listas iguais."]] :
    lista1[.] > 1 ? uniteste.listas_iguais(lista1[1:] lista2[1:]) :
    [0 ["ok"]]
}

uniteste