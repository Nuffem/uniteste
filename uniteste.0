lista # https://raw.githubusercontent.com/Nuffem/lista/0a20c969c400d2d09904f92b2082783da8e8c32b/lista.0

lista_reduzir = lista_original redutor =>
  lista_original[.] == 1 ?
    lista_original[0] :
  lista_original[.] == 2 ?
    redutor(lista_original[0] lista_original[1]) :
  lista_reduzir([
    redutor(lista_original[0] lista_original[1])
    ...lista_original[2:]
  ] redutor)

lista_planificar = lista_original =>
  lista_original[.] == 0 ?
    [] :
  [...lista_original[0] ...lista_planificar(lista_original[1:])]

uniteste = {
  descrever: título testes => () =>
    (
      mensagens = lista.mapear(
        lista_planificar(
          lista.mapear(
            testes,
            teste => (
              resultado = teste()
              resultado[0:resultado[.] - 2]
            )
          )
        )
        mensagem => [4 `${título} | ${mensagem[1]}`]
      )
      passaram = lista_reduzir(
        lista.mapear(testes, teste => (
          resultado = teste()
          resultado[resultado[.] - 1][2]
        ))
        valor_1 valor_2 => valor_1 + valor_2
      )
      [
        ...mensagens
        [4 `${"" + passaram}/${"" + mensagens[.]} testes passaram.`]
        [
          3
          passaram == mensagens[.] ? 0 : 1
          passaram
        ]
      ]
    )
  iguais: valor1 valor2 => () =>
    valor1 == valor2 ?
      [
        [4 "ok"]
        [4 "1/1 testes passaram."]
        [3 0 1]
      ] :
      [
        [4 `Esperava que ${"" + valor1} fosse igual a ${"" + valor2}.`]
        [4 "0/1 testes passaram."]
        [3 1 0]
      ]
}

uniteste